syntax on

set number
set expandtab
set tabstop=4
set shiftwidth=4
set autoindent


" Autoread and read on focus gained
set autoread
au FocusGained,BufEnter * :checktime


set colorcolumn=121


call plug#begin()

Plug 'preservim/vim-markdown'
" Plug '/usr/share/fb-editor-support/nvim', {'as': 'meta.nvim'}
Plug 'nvim-lualine/lualine.nvim'
Plug 'arcticicestudio/nord-vim'
Plug 'tpope/vim-dadbod'
Plug 'kristijanhusak/vim-dadbod-ui'
Plug 'preservim/nerdtree'
Plug 'tmux-plugins/vim-tmux-focus-events'

call plug#end()

" Colorscheme
colorscheme nord

" Markdown config
let g:vim_markdown_folding_disabled = 1

" Start NERDTree when Vim starts with a directory argument.
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists('s:std_in') |
    \ execute 'NERDTree' argv()[0] | wincmd p  | enew | wincmd h | execute 'cd '.argv()[0] | endif

" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" Open the existing NERDTree on each new tab.
autocmd BufWinEnter * if getcmdwintype() == '' | silent NERDTreeMirror | endif


" >>> Key Bindings

" Toggle NERDTree by Ctrl+t
nnoremap <C-t> :NERDTreeToggle<CR>

" Lualine setup
lua << END
require('lualine').setup {
    options = {
        theme = 'Tomorrow'
    }  
}
END
